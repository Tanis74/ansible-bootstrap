---
# This must be the first task for bootstrapping!
#
# If requiretty is set on the remote host, the bootstrapping itself will
# fail because of pipelining.  Instead, we force the use of paramiko, which
# does not do pipelining.  Alternatively, we could remove the paramiko
# connection specification, but then users would have to run:
#   ANSIBLE_SSH_PIPELINING=0 ansible-playbook playbooks/bootstrap.yaml ...
- name: Remove requiretty from sudoers
  connection: paramiko
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: absent
    regexp: ^\s*Defaults\s+requiretty$
    validate: /usr/sbin/visudo -cf %s
  when: ansible_connection != "local"

- name: Explicitly gather facts
  ansible.builtin.setup:

- name: Install SELinux dependencies
  ansible.builtin.dnf:
    name:
      - libselinux-python
      - policycoreutils-python
    state: present
  when: ansible_facts["os_family"] == "RedHat"

# NOTE: It seems weird to run this so late, since other things have assumed
# NOTE: that sudo exists. However, if this matters (i.e. sudo is not
# NOTE: installed), then the user MUST specify a become_method on the command
# NOTE: line for this role to work at all, so it doesn't really matter when
# NOTE: this particular task is run.

- name: Install sudo
  ansible.builtin.apt:
    name: sudo
    state: present
    cache_valid_time: 3600
    force_apt_get: true
  when: ansible_facts["os_family"] == "Debian"

- name: Allow ansible user to have passwordless sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/ansible
    line: "ansible ALL=(ALL) NOPASSWD: ALL"
    # Older systems require this to be 0440 or sudo breaks.
    mode: 0440
    create: true
    validate: /usr/sbin/visudo -cf %s

- name: Add ansible user and set groups
  ansible.builtin.user:
    name: ansible
    # On RedHat systems, we put the ansible user in the wheel group to
    # work-around cPanel's open file limit of 100.  Mitogen uses file
    # descriptors 100 and 101 for internal purposes.  See:
    # https://github.com/dw/mitogen/issues/644
    groups: "{{ 'wheel' if ansible_facts['os_family'] == 'RedHat' else omit }}"
    home: "/home/ansible"
    create_home: true

# - name: Create ansible's authorized_keys
#   become: true
#   become_user: "{{ 'root' if ansible_check_mode else 'ansible' }}"
#   ansible.posix.authorized_key:
#     user: ansible
#     path: "/home/ansible/.ssh/authorized_keys"
#     key: |
#       {{ lookup('file', 'ansible.ed25519.key.pub') }}
#       {{ lookup('file', 'ansible.rsa.key.pub') }}
#     exclusive: true

- name: Copy ansible's ed25519 key to authorized_keys
  become: true
  become_user: "{{ 'root' if ansible_check_mode else 'ansible' }}"
  ansible.posix.authorized_key:
    user: ansible
    state: present
    # path: "/home/ansible/.ssh/authorized_keys"
    key: "{{ lookup('file', ssh_key_file) }}"
    exclusive: true
  vars:
    ssh_key_file: "{{ lookup('first_found', ssh_key_candidates) }}"
    ssh_key_candidates:
      - "{{ role_path }}/files/terraform.ed25519.pub"
      - "~/.ssh/terraform.ed25519.pub"
  ignore_errors: true
  register: ed25519_result

- name: Copy ansible's rsa rsa to authorized_keys
  become: true
  become_user: "{{ 'root' if ansible_check_mode else 'ansible' }}"
  ansible.posix.authorized_key:
    user: ansible
    state: present
    # path: "/home/ansible/.ssh/authorized_keys"
    key: "{{ lookup('file', ssh_key_file) }}"
    exclusive: true
  vars:
    ssh_key_file: "{{ lookup('first_found', ssh_key_candidates) }}"
    ssh_key_candidates:
      - "{{ role_path }}/files/terraform.rsa.pub"
      - "~/.ssh/terraform.rsa.pub"
  ignore_errors: true
  register: rsa_result

- name: Ensure at least one key was added
  ansible.builtin.assert:
    that:
      - ed25519_result is succeeded or rsa_result is succeeded
    fail_msg: "Neither ed25519 nor RSA key could be added."
    success_msg: "At least one SSH key was successfully added."

# This must be after setting up passwordless sudo and the authorized_keys.
- name: Remove ansible's password
  ansible.builtin.user:
    name: ansible
    password: "*"
